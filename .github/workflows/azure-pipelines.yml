name: Build and deploy ASP.Net framework 4.6 app to an Azure Web App
 
env:
  AZURE_WEBAPP_NAME_DEV: dev-cobra-dotnet-webapp
  AZURE_WEBAPP_NAME_STAGE: stg-cobra-dotnet-webapp
  AZURE_WEBAPP_NAME: cobra-dotnet-webapp
  AZURE_WEBAPP_PACKAGE_PATH: '.'

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: 

permissions:
  contents: read 

jobs:
  build:
    runs-on: windows-latest 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Precompile website
        run: |
          # Find aspnet_compiler
          $aspnetCompilerPaths = @(
            "${env:WINDIR}\Microsoft.NET\Framework64\v4.0.30319\aspnet_compiler.exe",
            "${env:WINDIR}\Microsoft.NET\Framework\v4.0.30319\aspnet_compiler.exe",
            "${env:ProgramFiles(x86)}\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\aspnet_compiler.exe"
          )
          
          $aspnetCompiler = $aspnetCompilerPaths | Where-Object { Test-Path $_ } | Select-Object -First 1
          
          if (-not $aspnetCompiler) {
            Write-Host "❌ aspnet_compiler not found"
            exit 1
          }
          
          Write-Host "✅ Using aspnet_compiler: $aspnetCompiler"
          
          # Precompile website
          & $aspnetCompiler -v /cobrawebsite -p "cobrawebsite\" -f "publish\"
          
          if ($LASTEXITCODE -ne 0) {
            Write-Host "❌ Precompilation failed"
            exit 1
          }
          
          # Verify assemblies were created
          $assemblies = Get-ChildItem "publish\bin" -Filter "*.dll" -ErrorAction SilentlyContinue
          Write-Host "✅ Created $($assemblies.Count) assemblies"

      - name: Create ZIP package
        run: |
          Compress-Archive -Path "publish\*" -DestinationPath "deployment-package.zip" -Force
          $zipSize = [math]::Round((Get-Item "deployment-package.zip").Length/1MB, 2)
          Write-Host "✅ ZIP package created: $zipSize MB"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: publish

      - name: Upload ZIP package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment-package.zip

  # deploytodev:
  #   runs-on: windows-latest
  #   needs: build
  #   environment:
  #     name: 'Development'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: .net-app
 
  #     - name: Deploy to Dev
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME_DEV }}
  #         publish-profile: ${{ secrets.devgithubsecretappdeployment }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # deploytostage:
  #   runs-on: windows-latest
  #   needs: deploytodev
  #   environment:
  #     name: 'Stage'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: .net-app
 
  #     - name: Deploy to Stage
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME_STAGE }}
  #         publish-profile: ${{ secrets.stggithubsecretappdeployment }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # deploytoproduction:
  #   runs-on: windows-latest
  #   needs: deploytostage
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  #   steps:
  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: .net-app
 
  #     - name: Deploy to Production
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.githubsecretappdeployment }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
