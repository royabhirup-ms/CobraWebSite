name: Build and deploy ASP.Net framework 4.6 app to an Azure Web App
 
env:
  AZURE_WEBAPP_NAME_DEV: dev-cobra-dotnet-webapp
  AZURE_WEBAPP_NAME_STAGE: stg-cobra-dotnet-webapp
  AZURE_WEBAPP_NAME: cobra-dotnet-webapp
  AZURE_WEBAPP_PACKAGE_PATH: '.'

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: 
permissions:
  contents: read 
jobs:
  build:
    runs-on: windows-latest 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-version: 'latest'

      - name: Restore NuGet packages
        run: |
          # Clear any existing packages folder to ensure clean restore
          if (Test-Path "packages") { Remove-Item -Path "packages" -Recurse -Force }
          
          # For solutions with Website projects, we need to restore packages differently
          # First, restore packages for the class library projects
          nuget restore cobrawebsite.sln -PackagesDirectory packages -Verbosity detailed
          
          # For Website projects, we need to manually restore packages from packages.config
          if (Test-Path "cobrawebsite\packages.config") {
            Write-Host "Restoring packages for Website project..."
            nuget restore "cobrawebsite\packages.config" -PackagesDirectory packages -Verbosity detailed
          }
          
          # Verify packages were restored
          Write-Host "Verifying package restoration..."
          if (Test-Path "packages") {
            Write-Host "Packages directory exists"
            Get-ChildItem -Path "packages" | Write-Host
          } else {
            Write-Error "Packages directory not found after restore"
            exit 1
          }

      - name: Copy NuGet dependencies to Bin
        run: |
          if (!(Test-Path "cobrawebsite\Bin")) { New-Item -ItemType Directory -Path "cobrawebsite\Bin" -Force }
          Get-ChildItem -Path "packages" -Recurse -Filter "*.dll" | Where-Object {
            $_.Directory.Name -like "net4*"
          } | ForEach-Object {
            Copy-Item -Path $_.FullName -Destination "cobrawebsite\Bin\" -Force
          }

      - name: Build solution
        run: |
          msbuild cobrawebsite.sln `
          /p:Configuration=Release `
          /p:Platform="Any CPU"

      - name: Precompile and publish website
        run: |
          # Precompile the website
          C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_compiler.exe `
          -v / -p cobrawebsite -f -u publish
          
          # Copy Bin directory with NuGet packages
          Copy-Item -Path "cobrawebsite\Bin\*" -Destination "publish\Bin\" -Recurse -Force
          
          Write-Host "Published website with dependencies"
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cobra-app
          path: publish

  # deploytodev:
  #   permissions:
  #     contents: none
  #   runs-on: windows-latest
  #   needs: build
  #   environment:
  #     name: 'Development'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
 
  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: cobra-app
 
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME_DEV }}
  #         publish-profile: ${{ secrets.devgithubsecretappdeployment }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # deploytostage:
  #    permissions:
  #     contents: none
  #    runs-on: windows-latest
  #    needs: deploytodev
  #    environment:
  #     name: 'Stage'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
 
  #    steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: cobra-app
 
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME_STAGE }}
  #         publish-profile: ${{ secrets.stggithubsecretappdeployment }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # deploytoproduction:
  #   permissions:
  #     contents: none
  #   runs-on: windows-latest
  #   needs: deploytostage
  #   environment:
  #     name: 'Production'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
 
  #   steps:
  #     - name: Download artifact from build job
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: cobra-app
 
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #         publish-profile: ${{ secrets.githubsecretappdeployment }}
  #         package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}